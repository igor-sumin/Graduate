#include <test/ParallelAlgorithmComponentTest.h>
#include <test/SerialAlgorithmComponentTest.h>
#include <test/common/InstrumentalComponentTest.h>
#include <task/interfaces/Task.h>
#include <fstreams/interfaces/FWork.h>

int main(int argc, char** argv) {
//	ParallelAlgorithmComponentTest p;
//    p.execute();
//
//    SerialAlgorithmComponentTest s;
//    s.execute();
//
//    InstrumentalComponentTest i;
//    i.execute();

    Area area;
    Grid grid;
    Parameters params;
    Type type;

    const str path = "fstreams/data/";

//    // задаем размер сетки
//    std::cout << "Enter (n1, n2, m):\n";
//    std::cin >> grid;
//
//    // задаем параметры для задачи
//    std::cout << "Enter (alpha1, alpha2), (beta1, beta2), (gamma1, gamma2):\n";
//    std::cin >> params;
//
//    // задаем размер области
//    std::cout << "Enter [a, b] x [c, d] x [0, T]:\n";
//    std::cin >> area;

    // определение типа НУ
    const str data = path + "initcond.txt";

    std::cout << type;
    FWork::write(data);
    std::cin >> type;

    InitConditions cond(type);
    std::cout << cond;
    std::cin >> cond;

    // Task task(area, grid, params);
//    vec3<matr3d<double>> result = task.execute();
//    Instrumental::printVec3d(result, "u(x, y, t) = ");

    return 0;
}